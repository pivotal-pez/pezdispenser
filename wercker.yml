box: google/golang

build:
  # The steps that will be executed on build
  steps:
    - setup-go-workspace
    - wercker/golint

    # Get the dependencies
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/tools/godep
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH

    # Test the project
    - script:
        name: go test
        code: |
          godep go test ./... -v -race

    # Setting the coverage watermark low.
    # This should be raised as we gain more coverage...
    # Test coverage for the project
    - script:
        name: go test cover
        code: |
          (cd $WERCKER_SOURCE_DIR && ./testCoverage ./... $COVERAGE_WATERMARK)

    - script:
        name: build the server binary
        code: |
          godep go build main.go

    - script:
        name: add repo to artifact
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}

deploy:
  steps: 
    - add-ssh-key:
        keyname: PEZ_GITHUB_KEY
    
    - install-packages:
        packages: ssh wget  
    
    - xchapter7x/cf-push-zdd:
        user_name: $CF_USER
        user_pass: $CF_PASS
        org: $CF_ORG
        space: $CF_SPACE
        api_url: $CF_APIURL
        app_name: $CF_APPNAME
        use_manifest: true
        host: $CF_HOSTNAME
        domain: $CF_DOMAINNAME

    - script:
        name: setting correct origin url
        code: |
          git remote set-url origin ssh://git@github.com/pivotalservices/pezdispenser.git

    - xchapter7x/flowy-release:
        action: "complete-release"
        tag_variable_name: "VERSION_TAG"
        active: $GITFLOW_ACTIVE
        git_name: $GITFLOW_NAME
        git_email: $GITFLOW_EMAIL

    #- xchapter7x/flowy-release:
        #action: "get-next"
        #tag_variable_name: "VERSION_TAG"
        #git_name: $GITFLOW_NAME
        #git_email: $GITFLOW_EMAIL

    #- script:
        #name: flow
        #code: |
          #echo $VERSION_TAG
          #git branch
          #git status
          #git log | head -10
          #git tag -a $VERSION_TAG -m "version $VERSION_TAG"
          #git checkout -b localbuild || true
          #git checkout -b master origin/master || true
          #git pull origin master || true
          #git merge localbuild || true
          #git push origin master || true
          #git push --tags || true

          #git checkout -b develop origin/develop || true
          #git fetch --tags || true
          #git flow init -fd || true
          #git flow release start $VERSION_TAG develop || true
          #git flow release finish -m "Auto-Generated-Tag-$VERSION_TAG" $VERSION_TAG || true
          #git push origin master || true
          #git push --tags || true
          #git checkout develop || true
          #git push origin develop || true

