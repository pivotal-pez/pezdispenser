box: google/golang

build:
  # The steps that will be executed on build
  steps:
    - setup-go-workspace
    - wercker/golint

    # Get the dependencies
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/tools/godep
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH

    # Test the project
    - script:
        name: go test
        code: |
          godep go test ./... -v -race

    # Setting the coverage watermark low.
    # This should be raised as we gain more coverage...
    # Test coverage for the project
    - script:
        name: go test cover
        code: |
          (cd $WERCKER_SOURCE_DIR && ./testCoverage ./... $COVERAGE_WATERMARK)

    - script:
        name: build the server binary
        code: |
          godep go build main.go

    #we dont actually want to use this just yet
    #- internal/docker-push:
        #username: $DOCKER_USER
        #password: $DOCKER_P
        #tag: ${WERCKER_GIT_COMMIT}.${WERCKER_GIT_BRANCH}
        #repo: $DOCKER_REPO
        #registry: $DOCKER_REGISTRY

    - script:
        name: add repo to artifact
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}

deploy:
  steps: 
    - script:
        name: install-packages
        code: |
          sudo apt-get install -y ssh wget

    - wercker/add-ssh-key@1.0.2:
        keyname: PEZ_GITHUB_KEY  

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
        
    - xchapter7x/cf-push-zdd:
        user_name: $CF_USER
        user_pass: $CF_PASS
        org: $CF_ORG
        space: $CF_SPACE
        api_url: $CF_APIURL
        app_name: $CF_APPNAME
        use_manifest: true
        host: $CF_HOSTNAME
        domain: $CF_DOMAINNAME

    #will reactiveate this in favor of the below, when the step is modified
    #- xchapter7x/flowy-release:
        #action: "complete-release"
        #tag_variable_name: "VERSION_TAG"
        #active: $GITFLOW_ACTIVE
        #git_name: $GITFLOW_NAME
        #git_email: $GITFLOW_EMAIL

    - xchapter7x/flowy-release:
        action: "get-next"
        tag_variable_name: "VERSION_TAG"
        active: $GITFLOW_ACTIVE
        git_name: $GITFLOW_NAME
        git_email: $GITFLOW_EMAIL

    - script:
        name: flow
        code: |
          if [ $GITFLOW_ACTIVE = "true" ]; then
            echo $VERSION_TAG
            git branch
            git status
            git log | head -10
            git tag -a $VERSION_TAG -m "version $VERSION_TAG"
            git checkout -b localbuild || true
            git checkout -b master origin/master || true
            git checkout master
            git pull origin master
            git merge localbuild
            git status
            git log | head -10
            git push origin master
            git push --tags
          fi

