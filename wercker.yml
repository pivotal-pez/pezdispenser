box: google/golang
build:
  # The steps that will be executed on build
  steps:
    - setup-go-workspace
    - wercker/golint

    # Get the dependencies
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/tools/godep
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH

    # Test the project
    - script:
        name: go test
        code: |
          godep go test ./... -v -race

    # Setting the coverage watermark low.
    # This should be raised as we gain more coverage...
    # Test coverage for the project
    - script:
        name: go test cover
        code: |
          (cd $WERCKER_SOURCE_DIR && ./testCoverage ./... $COVERAGE_WATERMARK)

    - script:
        name: build the server binary
        code: |
          godep go build main.go

    - script:
        name: add repo to artifact
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}

deploy:
  steps: 
    - script:
        name: install-packages
        code: |
          sudo apt-get install -y ssh wget

    - wercker/add-ssh-key@1.0.2:
        keyname: PEZ_GITHUB_KEY  

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
        
    - xchapter7x/cf-push-zdd:
        num_instances: $CF_INSTANCES
        user_name: $CF_USER
        user_pass: $CF_PASS
        org: $CF_ORG
        space: $CF_SPACE
        api_url: $CF_APIURL
        app_name: $CF_APPNAME
        use_manifest: true
        manifest: $CF_MANIFEST_FILE_PATH

    - xchapter7x/flowy-release:
        action: "tag-only-release"
        tag_variable_name: "VERSION_TAG"
        active: $GITFLOW_ACTIVE
        git_name: $GITFLOW_NAME
        git_email: $GITFLOW_EMAIL

    - script:
        name: set release id variable and version.txt file
        code: |
          git fetch --tags
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`git log -n1 --pretty=format:%d HEAD | sed s/\ //g | sed s/tag\://g | awk -F',' '{print $2}'`
          echo $WERCKER_GITHUB_CREATE_RELEASE_ID > version.txt
          
    - script:
        name: package release tarball 
        code: |
          tar -cvzf dispenser.tgz manifest.yml $CF_MANIFEST_FILE_PATH cups.txt main Procfile version.txt README.md

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $WERCKER_GITHUB_CREATE_RELEASE_ID
        title: Admin Portal $WERCKER_GITHUB_CREATE_RELEASE_ID
        draft: $RELEASE_DRAFT
    
    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: dispenser.tgz
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip
